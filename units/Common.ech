#ifndef COMMON_ECH
#define COMMON_ECH

////    Defines    ////

#include "..\AIPlayers\Rand.ech"

#define EXIT_COMMAND_IN_SLEEP_MODE()

#ifdef STOPCURRENTACTION
#define CHECK_STOP_CURR_ACTION() \
    if (!StopCurrentAction()) \
    { \
        return false; \
    }
#else
#define CHECK_STOP_CURR_ACTION()
#endif STOPCURRENTACTION

#define HOLDPOSMODE 0
#define RESET_HOLDPOSMODE() 0
#define TALKMODE 0

#define TRACE(a)
#define TRACE1(a)
#define TRACE2(a, b)
#define TRACE3(a, b, c)
#define TRACE4(a, b, c, d)
#define TRACE5(a, b, c, d, e)
#define TRACE6(a, b, c, d, e, f)
#define TRACE7(a, b, c, d, e, f, g)
#define TRACE8(a, b, c, d, e, f, g, h)
#define TRACE9(a, b, c, d, e, f, g, h, i)
#define TRACE10(a, b, c, d, e, f, g, h, i, j)

#define ASSERT(a)
#define __ASSERT_FALSE()

////    Functions    ////

function int ABS(int nVal)
{
    if (nVal < 0)
    {
        return 0 - nVal;
    }
    return nVal;
}//����������������������������������������������������������������������������������������������������|

function int MIN(int nVal1, int nVal2)
{
    if (nVal1 < nVal2)
    {
        return nVal1;
    }
    return nVal2;
}//����������������������������������������������������������������������������������������������������|

function int MAX(int nVal1, int nVal2)
{
    if (nVal1 > nVal2)
    {
        return nVal1;
    }
    return nVal2;
}//����������������������������������������������������������������������������������������������������|

function int CLAMP(int nVal1, int nVal2, int nVal3)
{
    if (nVal1 < nVal2)
    {
        return nVal2;
    }
    if (nVal1 > nVal3)
    {
        return nVal3;
    }
    return nVal1;
}//����������������������������������������������������������������������������������������������������|

#ifdef AI_SCRIPT
#define ON_AI_SCRIPT(AIScriptVal) AIScriptVal
#define ON_USER_SCRIPT(notAIScriptVal)
#define SWITCH_USER_SCRIPT(notAIScriptVal, AIScriptVal) AIScriptVal
#else
#define ON_AI_SCRIPT(AIScriptVal) 
#define ON_USER_SCRIPT(notAIScriptVal) notAIScriptVal
#define SWITCH_USER_SCRIPT(notAIScriptVal, AIScriptVal) notAIScriptVal
#endif

#ifdef RPG_UNIT_EC
#define SWITCH_RPG_SCRIPT(notRPGScriptVal, RPGScriptVal) RPGScriptVal
#else
#define SWITCH_RPG_SCRIPT(notRPGScriptVal, RPGScriptVal) notRPGScriptVal
#endif

#endif COMMON_ECH



/*
Zmiany w EarthC.exe:
- dzia�a state XXX gdy powy�ej jest jego definicja a poni�ej deklaracja.
- wywo�anie state XXX nie jest dopuszczalne w �rodku state'a.
- mo�na u�ywa� return w definicji command.
- podpi�cie preprocesora, poprawki w wy�wietlaniu nazw plik�w na wyj�ciu.
- mo�liwo�� deklaracji funkcji przed jej u�yciem (function int ABC();).
- usuni�cie wieszania si� przy niekt�rych b��dach.
- consts mog� by� deklarowane w dowolnym miejscu skryptu.
- funkcje w skrypcie mog� zwraca� unit itp., lub moga "zwracac" void
- kontrola warto�ci zwracanych przez funkcje, komendy, eventy (mog�y zwraca� cokolwiek);
- w state mozna zrobic return state, expression; (np return Nothing, Fun(4)/3;
- automatyczna konwersja typ�w w operatorze przypisania i w return (unit = unitex).
- doko�czenie implementacji tablic int'owych. Dodanie tablic unitow. Automatyczne kasowanie tablic.
- tablice moga byc parametrami funkcji (rowniez ew. eventow i komend)
- dodane operatory << i >>.
- w ostatniej linii funkcji, eventow i komend ktore cos zwracaja musi byc return
- poprawienie dzialania continue w for oraz w do...while
- mozliwe uzycie liczb szesnastkowych
*/

